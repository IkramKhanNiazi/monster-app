{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SeachBox","type","placeholder","onChange","handleChange","App","state","searchField","e","setState","target","value","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4RAaeA,G,MAVF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,6BAAKN,EAAMG,QAAQI,aCMhBC,G,MAVE,SAACR,GACd,OACI,qBAAKC,UAAU,YAAf,SACID,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCInBO,G,MATE,SAACX,GACd,OACI,uBAAOY,KAAK,SACZX,UAAU,SACVY,YAAab,EAAMa,YACnBC,SAAUd,EAAMe,iBC8BTC,G,kNAhCbC,MAAQ,CACNC,YAAa,GACbT,SAAU,I,EASZM,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACF,YAAaC,EAAEE,OAAOC,S,kEAPlB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKP,SAAS,CAACX,SAAUkB,S,+BAQhC,IAAD,EACyBC,KAAKX,MAA9BC,EADA,EACAA,YACDW,EAFC,EACapB,SACcqB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQG,KAAKyB,cAAcC,SAASd,EAAYa,kBAElD,OACE,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,CAAUW,KAAK,SACdG,aAAca,KAAKb,aACnBF,YAAY,oBACb,cAAC,EAAD,CAAUJ,SAAUoB,W,GA3BVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAE1BX,M","file":"static/js/main.6c2acd33.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css';\n\nconst Card = (props) => {\n    return (\n        <div className=\"card-container\">\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\n            <h2>{props.monster.name}</h2>\n            <h2>{props.monster.email}</h2>\n        </div>\n    );\n};\n\nexport default Card;","import React from 'react';\nimport Card from '../card/card.component';\nimport './card-list.style.css';\n\nconst CardList = (props) => {\n    return (\n        <div className=\"card-list\">\n           {props.monsters.map(monster =>\n               <Card key={monster.id} monster={monster}/>\n            )}\n        </div>\n    );\n};\n\nexport default CardList;","import React from 'react';\nimport './search-box.styles.css';\n\nconst SeachBox = (props) => {\n    return (\n        <input type=\"search\" \n        className=\"search\"\n        placeholder={props.placeholder}\n        onChange={props.handleChange}/>\n    );\n};\n\nexport default SeachBox;","import React, { Component } from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SeachBox from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    searchField: '' ,\n    monsters: [],\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n\n  handleChange = e => {\n    this.setState({searchField: e.target.value})\n  }\n  \n\n  render() {\n    const {searchField, monsters} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <SeachBox type=\"search\" \n         handleChange={this.handleChange}\n         placeholder=\"search monsters\" />\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}